package org.example.yello;

import java.util.Scanner;

public class Asd {
    public static void main(String[] args) {


//1. 서술형
//자바의 기본 데이터 타입과 참조 데이터 타입의 차이를 서술하시오.
//
//의미, 종류, 저장되는 것, 예시(변수 1개)
//
//기본 데이터 타입(Primitive Type)
//
//참조 데이터 타입(Reference Type)
//
//
//
//2. 코드 구현 문제
//다음 요구사항을 만족하는 코드를 작성하세요.
//
//
//
//요구사항
//
//int 타입의 변수 num1에 10, double 타입의 변수 num2에 3.5를 저장합니다.
//두 변수를 더한 결과를 double 타입의 변수 result에 저장합니다.
//결과 값을 출력합니다

        int num1 = 10;
        double num2 = 3.5;
        double result = num1 + num2;

        System.out.println(result);

//3. 코드 구현 문제
//다음 요구사항을 만족하는 코드를 작성하세요.
//
//
//
//요구사항:
//
//사용자로부터 int 타입의 숫자 하나를 입력받습니다.
//입력받은 숫자가 짝수인지 홀수인지 판단하여 출력합니다.
//
//짝수인 경우: "입력하신 숫자는 짝수입니다."
//홀수인 경우: “입력하신 숫자는 홀수입니다.”
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        if (a % 2 == 0) {
            System.out.println("입력하신 숫자는 짝수입니다.");
        } else {
            System.out.println("입력하신 숫자는 홀수 입니다.");
        }

//4. 코드 구현 문제
//for-each 반복문을 사용하여 배열 요소를 출력할 때 적합한 코드를 작성하세요.
//
//int[] numbers = {1, 2, 3, 4, 5};
//
//
//
//// 정답 작성 //
//
//for
//
//
//
//
//5. 코드 구현 문제
//다음 요구사항을 만족하는 코드를 작성하세요.
//
//
//
//요구사항:
//
//Student라는 클래스를 작성합니다.
//
//name (이름, 문자열 타입)과 score (점수, 정수 타입) 필드를 가집니다.
//Student 객체를 생성할 때 이름과 점수를 초기화할 수 있는 생성자를 만듭니다.
//Student 객체 배열을 생성하여 학생 5명의 이름과 점수를 초기화합니다.
//
//예: 학생 이름: "John", "Jane", "Tom", "Emily", "Alex" / 점수: 85, 92, 78, 88, 95
//
//반복문을 사용하여 점수가 90점 이상인 학생의 이름을 출력합니다.
//
//6. 단답형
//자바에서 모든 클래스의 최상위 부모 클래스는 무엇입니까?
//
//정답: __________
//
//
//
//7. 단답형
//ArrayList와 같은 컬렉션에서 요소의 개수를 반환하는 메서드는 무엇입니까?
//
//정답: __________
//
//
//
//8. 단답형
//자바에서 if-else 문 대신 간결하게 조건에 따라 값을 반환할 수 있는 연산자는 무엇입니까?
//
//정답: __________
//
//
//
//9. 다음 중 인터페이스에서 사용할 수 없는 것은 무엇입니까?
//default 메서드
//정적 메서드
//private 메서드
//생성자 o
//정답: __________
//
//
//
//10. 다음 중 @FunctionalInterface에 해당하는 조건으로 올바른 것은 무엇입니까?
//여러 개의 추상 메서드 포함 가능
//반드시 하나의 추상 메서드 포함
//default 메서드를 포함할 수 없음 o
//정적 메서드만 포함 가능
//정답: __________
//
//
//
//11: 다음 코드에서 출력 결과는 무엇입니까?
//class Parent {
//
//    void display() { System.out.println("Parent"); }
//
//}

//class Child extends Parent {
//
//    void display() { System.out.println("Child"); }
//
//}

//public class Main {
//
//    public static void main(String[] args) {
//
//         Parent obj = new Child();
//         obj.display(); Child
//
//    }
//
//}
//
//
//
//
//12: 싱글톤 패턴을 구현할 때 가장 일반적으로 사용되는 메서드는 무엇입니까?
//public static
//private static o
//protected static
//default static
//정답: __________
//
//
//
//13: 추상 클래스
//추상 클래스는 객체를 생성할 수 있습니까?
//
//예
//아니요 o
//
//14: 다운 캐스팅
//다음 코드에서 다운 캐스팅이 성공하려면 어떤 조건이 필요합니까?
//
//Animal animal = new Dog();
// Dog dog = (Dog) animal;
//
//정답: __________
//
//
//
//15: 빌더 패턴의 주요 이점은 무엇입니까?
//상속 관계에서 객체를 더 쉽게 생성할 수 있다.
//객체 생성 시 복잡한 생성자 호출을 피할 수 있다.
//동시성 처리를 쉽게 한다.
//객체의 메모리 사용을 줄인다.
//정답: __________
//
//
//
//16: MVC 패턴에서 사용자의 입력을 처리하는 역할은 무엇입니까?
//Model
//View
//Controller
//정답: __________
//
//
//
//17: 인터페이스의 모든 메서드는 기본적으로 어떤 접근 제어자를 가집니까?
//정답: __________
//
//
//
//18: 추상 클래스와 인터페이스의 주요 차이점 중 맞지 않는 것은 무엇입니까?
//추상 클래스는 생성자를 가질 수 있다.
//인터페이스는 다중 상속을 지원한다.
//인터페이스는 필드를 가질 수 없다.
//추상 클래스는 정적 메서드를 가질 수 없다.
//정답: __________



    }
}
/*//# 문제 1: 두 수의 나눗셈

//! 1. 문제 설명

// - 두 정수 A와 B가 주어질 때, 두 수를 나눈값을 출력하는 프로그램을 작성하시오.

// - 나누는 수가 0일 경우 “0으로 나눌 수 없습니다.”를 출력하시오.

//- 조건식은 삼항 연산자를 사용하시오.



//! 2. 입력

// 첫 번째 줄에 정수 A와 B가 공백으로 구분되어 주어진다.


//! 3. 출력

// 두 정수를 나눈값을 출력한다.

. 기본 구조 및 Scanner 사용	2점	???? 클래스 선언: public class code01
???? main 메서드 선언 여부 확인
???? Scanner 객체 생성 여부 확인	???? 2점 / ???? 1점 / ???? 0점
2. 입력 처리 및 변수 할당	2점	???? sc.nextInt()로 A와 B 값을 입력받고 변수에 할당	???? 2점 / ???? 1점 / ???? 0점
3. 0 나누기 예외 처리 및 연산	2.5점	???? 삼항 연산자를 활용하여 0 나눗셈 예외 메시지를 출력
???? 정상 연산 시 A / B 출력 여부	???? 2.5점 / ???? 1.5점 / ???? 1점 / ???? 0점
4. 출력 및 자원 해제	1.5점	???? System.out.println() 사용
???? sc.close()로 자원 해제 여부 확인	???? 1.5점 / ???? 1점 / ???? 0.5점 / ???? 0점
5. 코드 가독성 및 스타일	2점	???? 들여쓰기, 변수명, 줄바꿈, 전체 구조가 명확한지
???? 불필요한 공백이나 누락 없음	???? 2점 / ???? 1점 / ???? 0점

 */