### 🔹 Java 기초 문법 (1~6)

1. `public static void main(String[] args)`에서 `static`이 필요한 이유는?
2. 지역 변수와 인스턴스 변수의 차이를 설명하시오.
3. `switch` 문에서 사용 가능한 타입은 무엇인가요?
4. `for-each` 반복문과 일반 `for` 반복문의 차이는?
5. Java에서 null 체크를 안전하게 처리하는 방법은?
6. 접근 제어자(`private`, `default`, `protected`, `public`)의 접근 범위를 비교해서 설명하시오.

---

### 🔹 객체지향 프로그래밍 (OOP) (7~14)

1. 캡슐화(encapsulation)란 무엇이며, 왜 필요한가요?
2. 상속(inheritance)을 사용할 때 주의해야 할 점은?
3. 오버로딩과 오버라이딩의 차이는?
4. 추상 클래스와 인터페이스의 차이를 설명하시오.
5. 다형성(polymorphism)을 활용한 코드 예시는?
6. final 클래스와 final 메소드의 의미는?
7. 객체의 생성 순서 (필드 초기화, 생성자 호출, 블록 실행 순서)를 설명하세요.
8. 생성자에서 `this()`와 `super()`는 어떤 상황에서 사용하나요?

---

### 🔹 컬렉션 및 제네릭 (15~18)

1. `List`, `Set`, `Map`의 핵심 차이점을 1줄씩 설명하세요.
2. 제네릭을 사용하는 이유와 장점은 무엇인가요?
3. 와일드카드(`<?>`, `<? extends T>`, `<? super T>`)는 언제 사용하나요?
4. `Comparator`를 람다식으로 사용하는 예시를 작성하세요.

---

### 🔹 예외 처리와 자바 내부 구조 (19~24)

1. 예외 처리 키워드 4가지는 무엇이며, 각각의 역할은?
2. 사용자 정의 예외(Custom Exception)는 언제 사용하는가요?
3. `throws`와 `throw`의 차이는 무엇인가요?
4. `try-with-resources` 문법이 필요한 이유는?
5. JVM의 메모리 구조에서 스택과 힙의 차이점은?
6. `String`이 immutable(불변)한 이유는?

---

### 🔹 실무 응용 / Java 8+ (25~30)

1. 람다 표현식으로 리스트 필터링을 구현하는 기본 예제를 보여주세요.
2. `Optional`을 사용하는 이유와 기본 사용법은?
3. `Stream API`에서 `map`과 `filter`의 차이점은?
4. `Stream API`에서 `reduce()` 메서드의 역할은 무엇이며, 합계를 구하는 예제를 작성해보세요.
5. `collect()` 메서드는 어떤 용도로 사용되며, `Collectors.toList()`와 함께 쓰는 예시를 작성해보세요.
6. `forEach()`와 `map()`의 차이점을 설명하고, 각각을 사용하는 상황을 예시와 함께 설명해보세요.